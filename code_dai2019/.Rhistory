  {dirdep[i,]=rep(0,2)}
  else
  {
    dirdep[i,]=(1/dep[i]-1)*(data[i,]-median)/(sum((data[i,]-median)^2))^(1/2)
  }
}
dirdep[205,]=c(0,0)
data.plot=data.frame(x=dirdep[,1],y=dirdep[,2],color=c(rep("grey",200),rep("red",4),"green"))
p<-ggplot(data.plot,aes(x,y,colour=color))+
  geom_point(show.legend = FALSE,colour=c(rep("grey",200),rep("red",4),"green"),shape=c(rep(20,200),11:14,19))+
  theme(plot.title = element_text(face = "bold",size=10,hjust = 0.5),axis.title.x=element_text(size=8),axis.title.y=element_text(size=8))+
  labs(title="Directional SDO")+xlab(expression(SDO(X[1])))+ylab(expression(SDO(X[2])))
plot.new()
vp <- viewport(height=unit(1/3,"npc"),width=unit(1/3,"npc"),just=c("right","bottom"),y=0, x=1/3)
print(p,vp=vp)
#plot(2,1)#
par(font.lab=1,cex.lab=1)
set.seed(100)
data=Data0(100,100,0.1)
data1<-data.frame(
  x=1:100/100,
  y=t(data[c(6:100,1:5),])
)
data1_long <- melt(data1, id="x")  # convert to long format
p1<-ggplot(data=data1_long,aes(x=x, y=value,colour=variable,size=variable))+ geom_line(show.legend=FALSE)+ xlab("t")+ylab("Value")+
  labs(title="Univariate Curves") + scale_colour_manual(values=c(rep(8,95),2:6))+scale_size_manual(values=c(rep(0.5,95),rep(1,5)))+
  theme(plot.title = element_text(face = "bold",size=10,hjust = 0.5),axis.title.x=element_text(size=8),axis.title.y=element_text(size=8))+
  xlab("t")+ylab("X")
plot.new()
vp <- viewport(height=unit(1/3,"npc"),width=unit(1/3,"npc"),just=c("right","bottom"),y=2/3, x=2/3)
print(p1,vp=vp)
BD=fMBD(t(data))
#plot(BD,rep(1,n),pch=19,col=8,cex=1,main="MBD",xlab="Depth",ylab="")
#points(BD[1:5],rep(1,5),col=c(2:6),pch=19)
data.plot=data.frame(x=BD[c(6:100,1:5)],y=rep(1,100),color=c(rep(8,95),2:6))
p<-ggplot(data.plot,aes(x,y,colour=color))+
  geom_point(show.legend = FALSE,colour=c(rep(8,95),2:6),shape=c(rep(20,95),rep(19,5)))+
  theme(plot.title = element_text(face = "bold",size=10,hjust = 0.5),axis.title.x=element_text(size=8),axis.title.y=element_text(size=8))+
  labs(title="MBD")+xlab("Depth")+ylab("")
plot.new()
vp <- viewport(height=unit(1/3,"npc"),width=unit(1/3,"npc"),just=c("right","bottom"),y=1/3, x=2/3)
print(p,vp=vp)
results1=DirOut(data)
var=results1$out_var
mr=results1$out_avr
data.plot=data.frame(x=mr[c(6:100,1:5)],y=var[c(6:100,1:5)],color=c(rep(8,95),2:6))
p<-ggplot(data.plot,aes(x,y,colour=color))+
  geom_point(show.legend = FALSE,colour=c(rep(8,95),2:6),shape=c(rep(20,95),rep(19,5)))+
  theme(plot.title = element_text(face = "bold",size=10,hjust = 0.5),axis.title.x=element_text(size=8),axis.title.y=element_text(size=8))+
  labs(title="dFSDO")+xlab("MO")+ylab("VO")
plot.new()
vp <- viewport(height=unit(1/3,"npc"),width=unit(1/3,"npc"),just=c("right","bottom"),y=0, x=2/3)
print(p,vp=vp)
par(font.lab=1,cex.lab=0.7)
set.seed(100)
data=MDATA5(100,50,2,0.05)
a=data
temp=dim(a)
n=temp[1]
p=temp[2]
x=1:p/p
y <-a[1,,1]
z <-a[1,,2]
s3d <- scatterplot3d(y,z,x,type="l",pch=20,color=1,lab=c(2, 2, 2),angle=60,mar=c(2.5,2.5,1.2,2),
                     xlim=c(-5,5),ylim=c(-5,5),xlab=expression(X[1]),ylab=expression(X[2]),zlab="t",
                     main="Bivariate Curves",box=FALSE)
#plot3d(y,z,x)
for (i in 1:n)
{
  y <-a[i,,1]
  z <-a[i,,2]
  s3d$points3d(y,z,x,pch = 20,col=8,type="l")
}
for (i in 1:5)
{
  y <-a[i,,1]
  z <-a[i,,2]
  s3d$points3d(y,z,x,pch =19,col=i+1,type="l",lwd=2)
}
y1=data[,,1]
y2=data[,,2]
ans=MFHD(y1,y2,alpha=0.125,Beta=0.9)
par(mar=c(2.5,2.5,1.2,0.5))
par(font.lab=1,cex.lab=1)
data.plot=data.frame(x=ans$MFHDdepth[c(6:100,1:5)],y=rep(1,length(ans$MFHDdepth)),color=c(rep(8,95),2:6))
p<-ggplot(data.plot,aes(x,y,colour=color))+
  geom_point(show.legend = FALSE,colour=c(rep(8,95),2:6),shape=c(rep(20,95),rep(19,5)))+
  theme(plot.title = element_text(face = "bold",size=10,hjust = 0.5),axis.title.x=element_text(size=8),axis.title.y=element_text(size=8))+
  labs(title="MFHD")+xlab("Depth")+ylab("")
plot.new()
vp <- viewport(height=unit(1/3,"npc"),width=unit(1/3,"npc"),just=c("right","bottom"),y=1/3, x=1)
print(p,vp=vp)
par(font.lab=1,cex.lab=0.7)
results1=DirOut(data,method="SDO")
par(font.lab=1,cex.lab=0.7)
scatterplot3d(cbind(results1$out_avr,results1$out_var),angle=55,mar=c(2.5,2.5,1.2,2),type="h",
              color=c(2:6,rep(8,95)),mgp=c(1,0.5,0),lab=c(2, 2, 5),pch=19,cex.symbols=c(rep(1,5),rep(1,95)),main="dFSDO",
              xlab=expression(MO~(X[1])),ylab=expression(MO~(X[2])),zlab="VO",box=FALSE)
data=MDATA5(100,50,2)
a=data
temp=dim(a)
n=temp[1]
p=temp[2]
x=1:p/p
y <-a[1,,1]
z <-a[1,,2]
s3d <- scatterplot3d(y,z,x,type="l",pch=20,color=1,lab=c(2, 2, 2),angle=60,mar=c(2.5,2.5,1.2,2),
                     xlim=c(-5,5),ylim=c(-5,5),xlab=expression(X[1]),ylab=expression(X[2]),zlab="t",
                     main="Bivariate Curves",box=FALSE)
#plot3d(y,z,x)
for (i in 1:n)
{
  y <-a[i,,1]
  z <-a[i,,2]
  s3d$points3d(y,z,x,pch = 20,col=8,type="l")
}
for (i in 1:5)
{
  y <-a[i,,1]
  z <-a[i,,2]
  s3d$points3d(y,z,x,pch =19,col=i+1,type="l",lwd=2)
}
y1=data[,,1]
y2=data[,,2]
ans=MFHD(y1,y2,alpha=0.125,Beta=0.9)
par(mar=c(2.5,2.5,1.2,0.5))
par(font.lab=1,cex.lab=1)
data.plot=data.frame(x=ans$MFHDdepth[c(6:100,1:5)],y=rep(1,length(ans$MFHDdepth)),color=c(rep(8,95),2:6))
p<-ggplot(data.plot,aes(x,y,colour=color))+
  geom_point(show.legend = FALSE,colour=c(rep(8,95),2:6),shape=c(rep(20,95),rep(19,5)))+
  theme(plot.title = element_text(face = "bold",size=10,hjust = 0.5),axis.title.x=element_text(size=8),axis.title.y=element_text(size=8))+
  labs(title="MFHD")+xlab("Depth")+ylab("")
plot.new()
vp <- viewport(height=unit(1/3,"npc"),width=unit(1/3,"npc"),just=c("right","bottom"),y=1/3, x=1)
print(p,vp=vp)
par(font.lab=1,cex.lab=0.7)
results1=DirOut(data,method="SDO")
par(font.lab=1,cex.lab=0.7)
scatterplot3d(cbind(results1$out_avr,results1$out_var),angle=55,mar=c(2.5,2.5,1.2,2),type="h",
              color=c(2:6,rep(8,95)),mgp=c(1,0.5,0),lab=c(2, 2, 5),pch=19,cex.symbols=c(rep(1,5),rep(1,95)),main="dFSDO",
              xlab=expression(MO~(X[1])),ylab=expression(MO~(X[2])),zlab="VO",box=FALSE)
#plot(1,1)#
par(mfcol=c(3,3),mar=c(2.5,2.5,1.2,0.1),mgp=c(1.5,0.5,0),oma=c(0.1,0.1,0.5,0.1))
par(font.lab=1,cex.lab=1)
set.seed(100)
a=mvrnorm(200,rep(0,2),matrix(2*c(1,0.7,0.7,1),2,2))
a1=mvrnorm(1,c(3,-3),matrix(0.2*c(1,0.7,0.7,1),2,2))
a4=mvrnorm(1,c(-3,+3),matrix(0.2*c(1,0.7,0.7,1),2,2))
a2=mvrnorm(1,c(-10,10),matrix(0.2*c(1,0.7,0.7,1),2,2))
a3=mvrnorm(1,c(10,10),matrix(0.2*c(1,0.7,0.7,1),2,2))
data=matrix(0,204,2)
data[1:200,]=a
data[201,]=a1
data[202,]=a2
data[203,]=a3
data[204,]=a4
median=med(data,"Liu")$median
data.plot=data.frame(x=c(data[1:204,1],median[1]),
                     y=c(data[1:204,2],median[2]),
                     color=c(rep("grey",200),rep("red",4),"green"))
p<-ggplot(data.plot,aes(x,y,colour=color))+
  geom_point(show.legend = FALSE,colour=c(rep("grey",200),rep("red",4),"green"),shape=c(rep(20,200),11:14,19))+
  theme(plot.title = element_text(face = "bold",size=10,hjust = 0.5),axis.title.x=element_text(size=8),axis.title.y=element_text(size=8))+
  xlab(expression(x[1]))+ylab(expression(x[2]))+labs(title="Two Dimensional Points")
plot.new()
vp <- viewport(height=unit(1/3,"npc"),width=unit(1/3,"npc"),just=c("right","bottom"),y=2/3, x=1/3)
print(p,vp=vp)
#plot(1,2)#
depth<-depth::depth
dep=seq(205)
for (i in 1:204)
{
  dep[i]=depth(data[i,],data,method="Liu")
}
dep[205]=depth(median,data,"Liu")
data.plot=data.frame(x=dep,y=rep(1,205),color=c(rep("grey",200),rep("red",4),"green"))
p<-ggplot(data.plot,aes(x,y,colour=color))+
  geom_point(show.legend = FALSE,colour=c(rep("grey",200),rep("red",4),"green"),shape=c(rep(20,200),11:14,19))+
  theme(plot.title = element_text(face = "bold",size=10,hjust = 0.5),axis.title.x=element_text(size=8),axis.title.y=element_text(size=8))+
  labs(title="Simplicial Depth")+xlab("Depth")+ylab("")
plot.new()
vp <- viewport(height=unit(1/3,"npc"),width=unit(1/3,"npc"),just=c("right","bottom"),y=1/3, x=1/3)
print(p,vp=vp)
#plot(1,3)#
dep=mdepth.RP(data)$dep
dirdep=matrix(0,205,2)
median=med(data,"Liu")$median
for (i in 1:204)
{
  if(sum((data[i,]-median)^2)==0)
  {dirdep[i,]=rep(0,2)}
  else
  {
    dirdep[i,]=(1/dep[i]-1)*(data[i,]-median)/(sum((data[i,]-median)^2))^(1/2)
  }
}
dirdep[205,]=c(0,0)
data.plot=data.frame(x=dirdep[,1],y=dirdep[,2],color=c(rep("grey",200),rep("red",4),"green"))
p<-ggplot(data.plot,aes(x,y,colour=color))+
  geom_point(show.legend = FALSE,colour=c(rep("grey",200),rep("red",4),"green"),shape=c(rep(20,200),11:14,19))+
  theme(plot.title = element_text(face = "bold",size=10,hjust = 0.5),axis.title.x=element_text(size=8),axis.title.y=element_text(size=8))+
  labs(title="Directional SDO")+xlab(expression(SDO(X[1])))+ylab(expression(SDO(X[2])))
plot.new()
vp <- viewport(height=unit(1/3,"npc"),width=unit(1/3,"npc"),just=c("right","bottom"),y=0, x=1/3)
print(p,vp=vp)
#plot(2,1)#
par(font.lab=1,cex.lab=1)
set.seed(100)
data=Data0(100,100)
data1<-data.frame(
  x=1:100/100,
  y=t(data[c(6:100,1:5),])
)
data1_long <- melt(data1, id="x")  # convert to long format
p1<-ggplot(data=data1_long,aes(x=x, y=value,colour=variable,size=variable))+ geom_line(show.legend=FALSE)+ xlab("t")+ylab("Value")+
  labs(title="Univariate Curves") + scale_colour_manual(values=c(rep(8,95),2:6))+scale_size_manual(values=c(rep(0.5,95),rep(1,5)))+
  theme(plot.title = element_text(face = "bold",size=10,hjust = 0.5),axis.title.x=element_text(size=8),axis.title.y=element_text(size=8))+
  xlab("t")+ylab("X")
plot.new()
vp <- viewport(height=unit(1/3,"npc"),width=unit(1/3,"npc"),just=c("right","bottom"),y=2/3, x=2/3)
print(p1,vp=vp)
BD=fMBD(t(data))
#plot(BD,rep(1,n),pch=19,col=8,cex=1,main="MBD",xlab="Depth",ylab="")
#points(BD[1:5],rep(1,5),col=c(2:6),pch=19)
data.plot=data.frame(x=BD[c(6:100,1:5)],y=rep(1,100),color=c(rep(8,95),2:6))
p<-ggplot(data.plot,aes(x,y,colour=color))+
  geom_point(show.legend = FALSE,colour=c(rep(8,95),2:6),shape=c(rep(20,95),rep(19,5)))+
  theme(plot.title = element_text(face = "bold",size=10,hjust = 0.5),axis.title.x=element_text(size=8),axis.title.y=element_text(size=8))+
  labs(title="MBD")+xlab("Depth")+ylab("")
plot.new()
vp <- viewport(height=unit(1/3,"npc"),width=unit(1/3,"npc"),just=c("right","bottom"),y=1/3, x=2/3)
print(p,vp=vp)
results1=DirOut(data)
var=results1$out_var
mr=results1$out_avr
data.plot=data.frame(x=mr[c(6:100,1:5)],y=var[c(6:100,1:5)],color=c(rep(8,95),2:6))
p<-ggplot(data.plot,aes(x,y,colour=color))+
  geom_point(show.legend = FALSE,colour=c(rep(8,95),2:6),shape=c(rep(20,95),rep(19,5)))+
  theme(plot.title = element_text(face = "bold",size=10,hjust = 0.5),axis.title.x=element_text(size=8),axis.title.y=element_text(size=8))+
  labs(title="dFSDO")+xlab("MO")+ylab("VO")
plot.new()
vp <- viewport(height=unit(1/3,"npc"),width=unit(1/3,"npc"),just=c("right","bottom"),y=0, x=2/3)
print(p,vp=vp)
par(font.lab=1,cex.lab=0.7)
set.seed(100)
data=MDATA5(100,50,2)
a=data
temp=dim(a)
n=temp[1]
p=temp[2]
x=1:p/p
y <-a[1,,1]
z <-a[1,,2]
s3d <- scatterplot3d(y,z,x,type="l",pch=20,color=1,lab=c(2, 2, 2),angle=60,mar=c(2.5,2.5,1.2,2),
                     xlim=c(-5,5),ylim=c(-5,5),xlab=expression(X[1]),ylab=expression(X[2]),zlab="t",
                     main="Bivariate Curves",box=FALSE)
#plot3d(y,z,x)
for (i in 1:n)
{
  y <-a[i,,1]
  z <-a[i,,2]
  s3d$points3d(y,z,x,pch = 20,col=8,type="l")
}
for (i in 1:5)
{
  y <-a[i,,1]
  z <-a[i,,2]
  s3d$points3d(y,z,x,pch =19,col=i+1,type="l",lwd=2)
}
y1=data[,,1]
y2=data[,,2]
ans=MFHD(y1,y2,alpha=0.125,Beta=0.9)
par(mar=c(2.5,2.5,1.2,0.5))
par(font.lab=1,cex.lab=1)
data.plot=data.frame(x=ans$MFHDdepth[c(6:100,1:5)],y=rep(1,length(ans$MFHDdepth)),color=c(rep(8,95),2:6))
p<-ggplot(data.plot,aes(x,y,colour=color))+
  geom_point(show.legend = FALSE,colour=c(rep(8,95),2:6),shape=c(rep(20,95),rep(19,5)))+
  theme(plot.title = element_text(face = "bold",size=10,hjust = 0.5),axis.title.x=element_text(size=8),axis.title.y=element_text(size=8))+
  labs(title="MFHD")+xlab("Depth")+ylab("")
plot.new()
vp <- viewport(height=unit(1/3,"npc"),width=unit(1/3,"npc"),just=c("right","bottom"),y=1/3, x=1)
print(p,vp=vp)
par(font.lab=1,cex.lab=0.7)
results1=DirOut(data,method="SDO")
par(font.lab=1,cex.lab=0.7)
scatterplot3d(cbind(results1$out_avr,results1$out_var),angle=55,mar=c(2.5,2.5,1.2,2),type="h",
              color=c(2:6,rep(8,95)),mgp=c(1,0.5,0),lab=c(2, 2, 5),pch=19,cex.symbols=c(rep(1,5),rep(1,95)),main="dFSDO",
              xlab=expression(MO~(X[1])),ylab=expression(MO~(X[2])),zlab="VO",box=FALSE)
par(mfrow=c(3,2),mar=c(2.7,2.5,2,0.5),mgp=c(1.5,0.5,0),font.lab=1,cex.lab=1.2)
#aemet=readRDS("aemet.rds")
data(aemet)
geo=abind(aemet$df$longitude,aemet$df$latitude,aemet$df$altitude,along=2)
bsp11<-create.bspline.basis(aemet$temp$rangeval,nbasis=30)
S.bsp11  <-  S.basis(aemet$temp$argvals, bsp11)
temp.bsp11<-temp.bsp111<-aemet$temp
temp.bsp11$data <- aemet$temp$data%*%S.bsp11
sdata1=temp.bsp11$data
data=sdata1
#sdata1=data=aemet$temp$data
se1=c(34,35,36,55,57,58,60)
se2=c(45)
se3=c(56)
se4=c(59)
se5=c(39,33,44,66)
se=c(1:73)[-c(se1,se2,se3,se4,se5)]
col=seq(73)*0+1
col[se1]=3
col[se]=8
col[se5]=6
col[c(se2,se3,se4)]=c(4,5,2)
#data=aemet$temp$data
data1<-data.frame(x=1:365,y=t(data))
data1_long <- melt(data1, id="x")  # convert to long format
p1<-ggplot(data=data1_long,aes(x=x, y=value,colour=variable))+ geom_line(show.legend=FALSE)+ xlab("Time (Day)")+ylab(expression(~degree~C))+
  labs(title="Temperature") + scale_colour_manual(values=col)+scale_size_manual(values=c(rep(1,94),rep(2,6)))+
  theme(plot.title = element_text(face = "bold",size=10,hjust = 0.5),axis.title.x=element_text(size=8),axis.title.y=element_text(size=8))
plot.new()
vp <- viewport(height=unit(1/3,"npc"),width=unit(1/2,"npc"),just=c("right","bottom"),y=2/3, x=0.5)
print(p1,vp=vp)
n=dim(sdata1)[1]
p=dim(sdata1)[2]
dmat=matrix(0,n,p)
medvec=apply(t(data),1,median)
madvec=apply(t(data),1,mad)
dmat=(t(data)-medvec)/(madvec)
mr=apply(dmat,2,mean)
var=apply(dmat,2,var)
data.plot=data.frame(x=mr,y=var,col=col)
p<-ggplot(data.plot,aes(x,y,colour=color))+
  geom_point(show.legend = FALSE,colour=col)+
  theme(plot.title = element_text(face = "bold",size=10,hjust = 0.5),axis.title.x=element_text(size=8),axis.title.y=element_text(size=8))+
  labs(title="Directional Outlyingness")+xlab("MO (Temperature)")+ylab("VO")
plot.new()
vp <- viewport(height=unit(1/3,"npc"),width=unit(0.5,"npc"),just=c("right","bottom"),y=2/3, x=1)
print(p,vp=vp)
bsp11<-create.bspline.basis(aemet$logprec$rangeval,nbasis=30)
S.bsp11  <-  S.basis(aemet$logprec$argvals, bsp11)
temp.bsp11<-temp.bsp111<-aemet$logprec
temp.bsp11$data <- aemet$logprec$data%*%S.bsp11
sdata2=temp.bsp11$data
data=sdata2
#sdata2=data=aemet$logprec$data
data1<-data.frame(x=1:365,y=t(data))
data1_long <- melt(data1, id="x")  # convert to long format
p1<-ggplot(data=data1_long,aes(x=x, y=value,colour=variable))+ geom_line(show.legend=FALSE)+ xlab("Time (Day)")+ylab("")+
  labs(title="Log Precipitation") + scale_colour_manual(values=col)+scale_size_manual(values=c(rep(1,94),rep(2,6)))+
  theme(plot.title = element_text(face = "bold",size=10,hjust = 0.5),axis.title.x=element_text(size=8),axis.title.y=element_text(size=8))
plot.new()
vp <- viewport(height=unit(1/3,"npc"),width=unit(1/2,"npc"),just=c("right","bottom"),y=1/3, x=0.5)
print(p1,vp=vp)
n=dim(sdata2)[1]
p=dim(sdata2)[2]
dmat=matrix(0,n,p)
medvec=apply(t(data),1,median)
madvec=apply(t(data),1,mad)
dmat=(t(data)-medvec)/(madvec)
mr=apply(dmat,2,mean)
var=apply(dmat,2,var)
data.plot=data.frame(x=mr,y=var,col=col)
p<-ggplot(data.plot,aes(x,y,colour=color))+
  geom_point(show.legend = FALSE,colour=col)+
  theme(plot.title = element_text(face = "bold",size=10,hjust = 0.5),axis.title.x=element_text(size=8),axis.title.y=element_text(size=8))+
  labs(title="Directional Outlyingness")+xlab("MO (Log Precipitation)")+ylab("VO")
plot.new()
vp <- viewport(height=unit(1/3,"npc"),width=unit(0.5,"npc"),just=c("right","bottom"),y=1/3, x=1)
print(p,vp=vp)
par(font.lab=1,cex.lab=0.7)
n=dim(aemet$temp)[1]
p=dim(aemet$temp)[2]
data=array(0,dim=c(n,p,2),dimnames=list(c(1:n),c(1:p),c("var1","var2")))
data[,,1]=sdata1
data[,,2]=sdata2
results=DirOut(data,method="SDO")
tt=cbind(results$out_avr,results$out_var)
geo=cbind(aemet$df$longitude,aemet$df$latitude,aemet$df$altitude)
a<-scatterplot3d(geo,type="n",xlab="Longitude",ylab="Latitude",zlab="Altitude",lab=c(2, 2, 2),angle=60,mar=c(2.7,2.5,2,2),main="Locations of Stations",box=FALSE)
a$points3d(geo[se,],lab=c(2, 2, 2),col=8,pch=19,cex=1)
a$points3d(geo[se1,],lab=c(2, 2, 2),col=3,pch=19,cex=1)
a$points3d(geo[se5,],lab=c(2, 2, 2),col=6,pch=19,cex=1)
a$points3d(geo[c(se2,se3,se4),],lab=c(2, 2, 2),col=c(4,5,2),pch=19,cex=1)
dimnames(tt)=list(c(1:n),c("MO (Temperature)","MO (Log precipitation)","VO"))
b<-scatterplot3d(tt,lab=c(2, 2, 2),main="Directional Outlyingness",type="h",mar=c(2.7,2.5,2,2),angle=60,box=FALSE)
b$points3d(tt[se,],lab=c(2, 2, 2),col=8,pch=19,cex=1)
b$points3d(tt[se1,],lab=c(2, 2, 2),col=3,pch=19,cex=1)
b$points3d(tt[se5,],lab=c(2, 2, 2),col=6,pch=19,cex=1)
b$points3d(tt[c(se2,se3,se4),],lab=c(2, 2, 2),col=c(4,5,2),pch=19,cex=1)
#col=seq(n)
#col[se]=1
#col[se1]=3
#col[se5]=6
#col[c(se2,se3,se4)]=c(4,5,2)
#plot(rep(1,n),ans$MBD,col=col)
par(mfrow=c(3,2),mar=c(2.7,2.5,2,0.5),mgp=c(1.5,0.5,0),font.lab=1,cex.lab=1.2)
#aemet=readRDS("aemet.rds")
data(aemet)
geo=abind(aemet$df$longitude,aemet$df$latitude,aemet$df$altitude,along=2)
bsp11<-create.bspline.basis(aemet$temp$rangeval,nbasis=11)
S.bsp11  <-  S.basis(aemet$temp$argvals, bsp11)
temp.bsp11<-temp.bsp111<-aemet$temp
temp.bsp11$data <- aemet$temp$data%*%S.bsp11
sdata1=temp.bsp11$data
data=sdata1
#sdata1=data=aemet$temp$data
se1=c(34,35,36,55,57,58,60)
se2=c(45)
se3=c(56)
se4=c(59)
se5=c(39,33,44,66)
se=c(1:73)[-c(se1,se2,se3,se4,se5)]
col=seq(73)*0+1
col[se1]=3
col[se]=8
col[se5]=6
col[c(se2,se3,se4)]=c(4,5,2)
#data=aemet$temp$data
data1<-data.frame(x=1:365,y=t(data))
data1_long <- melt(data1, id="x")  # convert to long format
p1<-ggplot(data=data1_long,aes(x=x, y=value,colour=variable))+ geom_line(show.legend=FALSE)+ xlab("Time (Day)")+ylab(expression(~degree~C))+
  labs(title="Temperature") + scale_colour_manual(values=col)+scale_size_manual(values=c(rep(1,94),rep(2,6)))+
  theme(plot.title = element_text(face = "bold",size=10,hjust = 0.5),axis.title.x=element_text(size=8),axis.title.y=element_text(size=8))
plot.new()
vp <- viewport(height=unit(1/3,"npc"),width=unit(1/2,"npc"),just=c("right","bottom"),y=2/3, x=0.5)
print(p1,vp=vp)
n=dim(sdata1)[1]
p=dim(sdata1)[2]
dmat=matrix(0,n,p)
medvec=apply(t(data),1,median)
madvec=apply(t(data),1,mad)
dmat=(t(data)-medvec)/(madvec)
mr=apply(dmat,2,mean)
var=apply(dmat,2,var)
data.plot=data.frame(x=mr,y=var,col=col)
p<-ggplot(data.plot,aes(x,y,colour=color))+
  geom_point(show.legend = FALSE,colour=col)+
  theme(plot.title = element_text(face = "bold",size=10,hjust = 0.5),axis.title.x=element_text(size=8),axis.title.y=element_text(size=8))+
  labs(title="Directional Outlyingness")+xlab("MO (Temperature)")+ylab("VO")
plot.new()
vp <- viewport(height=unit(1/3,"npc"),width=unit(0.5,"npc"),just=c("right","bottom"),y=2/3, x=1)
print(p,vp=vp)
bsp11<-create.bspline.basis(aemet$logprec$rangeval,nbasis=11)
S.bsp11  <-  S.basis(aemet$logprec$argvals, bsp11)
temp.bsp11<-temp.bsp111<-aemet$logprec
temp.bsp11$data <- aemet$logprec$data%*%S.bsp11
sdata2=temp.bsp11$data
data=sdata2
#sdata2=data=aemet$logprec$data
data1<-data.frame(x=1:365,y=t(data))
data1_long <- melt(data1, id="x")  # convert to long format
p1<-ggplot(data=data1_long,aes(x=x, y=value,colour=variable))+ geom_line(show.legend=FALSE)+ xlab("Time (Day)")+ylab("")+
  labs(title="Log Precipitation") + scale_colour_manual(values=col)+scale_size_manual(values=c(rep(1,94),rep(2,6)))+
  theme(plot.title = element_text(face = "bold",size=10,hjust = 0.5),axis.title.x=element_text(size=8),axis.title.y=element_text(size=8))
plot.new()
vp <- viewport(height=unit(1/3,"npc"),width=unit(1/2,"npc"),just=c("right","bottom"),y=1/3, x=0.5)
print(p1,vp=vp)
n=dim(sdata2)[1]
p=dim(sdata2)[2]
dmat=matrix(0,n,p)
medvec=apply(t(data),1,median)
madvec=apply(t(data),1,mad)
dmat=(t(data)-medvec)/(madvec)
mr=apply(dmat,2,mean)
var=apply(dmat,2,var)
data.plot=data.frame(x=mr,y=var,col=col)
p<-ggplot(data.plot,aes(x,y,colour=color))+
  geom_point(show.legend = FALSE,colour=col)+
  theme(plot.title = element_text(face = "bold",size=10,hjust = 0.5),axis.title.x=element_text(size=8),axis.title.y=element_text(size=8))+
  labs(title="Directional Outlyingness")+xlab("MO (Log Precipitation)")+ylab("VO")
plot.new()
vp <- viewport(height=unit(1/3,"npc"),width=unit(0.5,"npc"),just=c("right","bottom"),y=1/3, x=1)
print(p,vp=vp)
par(font.lab=1,cex.lab=0.7)
n=dim(aemet$temp)[1]
p=dim(aemet$temp)[2]
data=array(0,dim=c(n,p,2),dimnames=list(c(1:n),c(1:p),c("var1","var2")))
data[,,1]=sdata1
data[,,2]=sdata2
results=DirOut(data,method="SDO")
tt=cbind(results$out_avr,results$out_var)
geo=cbind(aemet$df$longitude,aemet$df$latitude,aemet$df$altitude)
a<-scatterplot3d(geo,type="n",xlab="Longitude",ylab="Latitude",zlab="Altitude",lab=c(2, 2, 2),angle=60,mar=c(2.7,2.5,2,2),main="Locations of Stations",box=FALSE)
a$points3d(geo[se,],lab=c(2, 2, 2),col=8,pch=19,cex=1)
a$points3d(geo[se1,],lab=c(2, 2, 2),col=3,pch=19,cex=1)
a$points3d(geo[se5,],lab=c(2, 2, 2),col=6,pch=19,cex=1)
a$points3d(geo[c(se2,se3,se4),],lab=c(2, 2, 2),col=c(4,5,2),pch=19,cex=1)
dimnames(tt)=list(c(1:n),c("MO (Temperature)","MO (Log precipitation)","VO"))
b<-scatterplot3d(tt,lab=c(2, 2, 2),main="Directional Outlyingness",type="h",mar=c(2.7,2.5,2,2),angle=60,box=FALSE)
b$points3d(tt[se,],lab=c(2, 2, 2),col=8,pch=19,cex=1)
b$points3d(tt[se1,],lab=c(2, 2, 2),col=3,pch=19,cex=1)
b$points3d(tt[se5,],lab=c(2, 2, 2),col=6,pch=19,cex=1)
b$points3d(tt[c(se2,se3,se4),],lab=c(2, 2, 2),col=c(4,5,2),pch=19,cex=1)
#col=seq(n)
#col[se]=1
#col[se1]=3
#col[se5]=6
#col[c(se2,se3,se4)]=c(4,5,2)
#plot(rep(1,n),ans$MBD,col=col)
par(mfrow=c(1,1),mar=c(2.5,2.5,2,0.5),mgp=c(1.5,0.5,0))
data=readRDS("ecg.rds")
col=seq(810)
col[1:208]=rgb(1,0,0,0.3)
col[209:810]=rgb(190/255,190/255,190/255,0.3)
data1<-data.frame(x=1:85,y=t(data))
data1_long <- melt(data1, id="x")  # convert to long format
p1<-ggplot(data=data1_long,aes(x=x, y=value,colour=variable))+ geom_line(lwd=1,show.legend=FALSE)+ xlab("Time (seconds)")+ylab("Valtage (mV)")+
  labs(title="ECG Data") + scale_colour_manual(values=col)+
  theme(plot.title = element_text(face = "bold",size=12,hjust = 0.5),axis.title.x=element_text(size=10),axis.title.y=element_text(size=10))
plot.new()
vp <- viewport(height=unit(1,"npc"),width=unit(1,"npc"),just=c("right","bottom"),y=0, x=1)
print(p1,vp=vp)
refund.shiny
require(refund.shiny)
q()
